{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administra\\xE7\\xE3o\\\\Documents\\\\Digital House\\\\5\\xBA Bimestre\\\\Especializa\\xE7\\xE3o Front End I\\\\pokecenter\\\\src\\\\context\\\\contextoFormulario.jsx\",\n    _s = $RefreshSig$();\n\n// Aqui devemos criar nosso contexto e nosso provider.\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormularioContext = /*#__PURE__*/createContext();\nconst initialState = {\n  treinador: {\n    nome: \"\",\n    sobrenome: \"\",\n    email: \"\"\n  },\n  pokemon: {\n    nomePokemon: \"\",\n    tipoPokemon: \"\",\n    elementoPokemon: \"\",\n    alturaPokemon: 0,\n    idadePokemon: 0\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ATUALIZAR_TREINADOR\":\n      return { ...state,\n        treinador: { ...state.treinador,\n          [action.payload.key]: action.payload.value\n        }\n      };\n\n    case \"ATUALIZAR_POKEMON\":\n      return { ...state,\n        pokemon: { ...state.pokemon,\n          [action.payload.key]: action.payload.value\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst FormularioContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleReducer = (type, values) => {\n    dispatch({\n      type: type,\n      payload: values\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormularioContext.Provider, {\n    value: {\n      state,\n      handleReducer\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormularioContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = FormularioContextProvider;\nexport default FormularioContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormularioContextProvider\");","map":{"version":3,"sources":["C:/Users/Administração/Documents/Digital House/5º Bimestre/Especialização Front End I/pokecenter/src/context/contextoFormulario.jsx"],"names":["createContext","useReducer","FormularioContext","initialState","treinador","nome","sobrenome","email","pokemon","nomePokemon","tipoPokemon","elementoPokemon","alturaPokemon","idadePokemon","reducer","state","action","type","payload","key","value","FormularioContextProvider","children","dispatch","handleReducer","values"],"mappings":";;;AAAA;AACA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,iBAAiB,gBAAGF,aAAa,EAAvC;AAEP,MAAMG,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,EADG;AAETC,IAAAA,SAAS,EAAE,EAFF;AAGTC,IAAAA,KAAK,EAAE;AAHE,GADQ;AAMnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,EAAE,EADN;AAEPC,IAAAA,WAAW,EAAE,EAFN;AAGPC,IAAAA,eAAe,EAAE,EAHV;AAIPC,IAAAA,aAAa,EAAE,CAJR;AAKPC,IAAAA,YAAY,EAAE;AALP;AANU,CAArB;;AAeA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,qBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELX,QAAAA,SAAS,EAAE,EACT,GAAGW,KAAK,CAACX,SADA;AAET,WAACY,MAAM,CAACE,OAAP,CAAeC,GAAhB,GAAsBH,MAAM,CAACE,OAAP,CAAeE;AAF5B;AAFN,OAAP;;AAOF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELP,QAAAA,OAAO,EAAE,EACP,GAAGO,KAAK,CAACP,OADF;AAEP,WAACQ,MAAM,CAACE,OAAP,CAAeC,GAAhB,GAAsBH,MAAM,CAACE,OAAP,CAAeE;AAF9B;AAFJ,OAAP;;AAOF;AACE,aAAOL,KAAP;AAlBJ;AAoBD,CArBD;;AAsBA,MAAMM,yBAAyB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAClD,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBtB,UAAU,CAACa,OAAD,EAAUX,YAAV,CAApC;;AAEA,QAAMqB,aAAa,GAAG,CAACP,IAAD,EAAOQ,MAAP,KAAkB;AACtCF,IAAAA,QAAQ,CAAC;AAACN,MAAAA,IAAI,EAAEA,IAAP;AAAaC,MAAAA,OAAO,EAAEO;AAAtB,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAE;AAAEV,MAAAA,KAAF;AAASS,MAAAA;AAAT,KAAnC;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAZD;;GAAMD,yB;;KAAAA,yB;AAcN,eAAeA,yBAAf","sourcesContent":["// Aqui devemos criar nosso contexto e nosso provider.\nimport { createContext, useReducer } from \"react\";\n\nexport const FormularioContext = createContext();\n\nconst initialState = {\n  treinador: {\n    nome: \"\",\n    sobrenome: \"\",\n    email: \"\",\n  },\n  pokemon: {\n    nomePokemon: \"\",\n    tipoPokemon: \"\",\n    elementoPokemon: \"\",\n    alturaPokemon: 0,\n    idadePokemon: 0,\n  },\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"ATUALIZAR_TREINADOR\":\n      return {\n        ...state,\n        treinador: {\n          ...state.treinador,\n          [action.payload.key]: action.payload.value,\n        },\n      };\n    case \"ATUALIZAR_POKEMON\":\n      return {\n        ...state,\n        pokemon: {\n          ...state.pokemon,\n          [action.payload.key]: action.payload.value,\n        },\n      };\n    default:\n      return state;\n  }\n};\nconst FormularioContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const handleReducer = (type, values) => {\n    dispatch({type: type, payload: values});\n  }\n\n  return (\n    <FormularioContext.Provider value={{ state, handleReducer }}>\n      {children}\n    </FormularioContext.Provider>\n  );\n};\n\nexport default FormularioContextProvider;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administra\\xE7\\xE3o\\\\Documents\\\\Digital House\\\\5\\xBA Bimestre\\\\Especializa\\xE7\\xE3o Front End I\\\\pokecenter\\\\src\\\\components\\\\Input\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport { PokeCenterContext } from \"../../context/contextoFormulario\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = _ref => {\n  _s();\n\n  let {\n    name,\n    label,\n    type = \"text\"\n  } = _ref;\n  // Aqui devemos acessar o estado global para obter os dados\n  // do formulário e uma maneira de atualizá-los.\n  const context = useContext(PokeCenterContext);\n  const {\n    treiner,\n    handleBlur\n  } = context; // Além disso, usaremos um estado local para lidar com o estado da input.\n\n  const [dadosTreiner, setDadosTreiner] = useState([]);\n\n  const onChange = e => {\n    // Aqui devemos atualizar o estado local do input\n    setDadosTreiner({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onBlur = e => {\n    e.preventDefault(); // Aqui devemos atualizar o estado global com os dados de\n    // cada entrada.\n\n    handleBlur({\n      nome: dadosTreiner,\n      sobrenome: dadosTreiner,\n      email: dadosTreiner,\n      nomePokemon: dadosTreiner\n    }); // DICA: Podemos usar o nome de cada entrada para salvar\n    // os dados no estado global usando uma notação { chave: valor }\n  };\n\n  console.log(treiner);\n  console.log(dadosTreiner);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-receptor\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      value: dadosTreiner,\n      name: label,\n      id: name,\n      onChange: onChange,\n      onBlur: e => onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"K5l0eJITgWxOTIMe0suQTiBBl8k=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["C:/Users/Administração/Documents/Digital House/5º Bimestre/Especialização Front End I/pokecenter/src/components/Input/index.jsx"],"names":["React","useContext","useState","PokeCenterContext","Input","name","label","type","context","treiner","handleBlur","dadosTreiner","setDadosTreiner","onChange","e","target","value","onBlur","preventDefault","nome","sobrenome","email","nomePokemon","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,iBAAT,QAAkC,kCAAlC;;;AAEA,MAAMC,KAAK,GAAG,QAAoC;AAAA;;AAAA,MAAnC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,IAAI,GAAG;AAAtB,GAAmC;AAChD;AACA;AACA,QAAMC,OAAO,GAAGP,UAAU,CAACE,iBAAD,CAA1B;AACA,QAAM;AAACM,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAwBF,OAA9B,CAJgD,CAMhD;;AACA,QAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMW,QAAQ,GAAIC,CAAD,IAAO;AACtB;AACAF,IAAAA,eAAe,CAAC;AAAC,OAACE,CAAC,CAACC,MAAF,CAASV,IAAV,GAAiBS,CAAC,CAACC,MAAF,CAASC;AAA3B,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMC,MAAM,GAAIH,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACI,cAAF,GADoB,CAGpB;AACA;;AACAR,IAAAA,UAAU,CAAC;AACTS,MAAAA,IAAI,EAAER,YADG;AAETS,MAAAA,SAAS,EAAET,YAFF;AAGTU,MAAAA,KAAK,EAAEV,YAHE;AAITW,MAAAA,WAAW,EAAEX;AAJJ,KAAD,CAAV,CALoB,CAWpB;AACA;AACD,GAbD;;AAeAY,EAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYb,YAAZ;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEN,IAAhB;AAAA,gBAAuBC;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,IAAI,EAAEC,IADR;AAEE,MAAA,KAAK,EAAEI,YAFT;AAGE,MAAA,IAAI,EAAEL,KAHR;AAIE,MAAA,EAAE,EAAED,IAJN;AAKE,MAAA,QAAQ,EAAEQ,QALZ;AAME,MAAA,MAAM,EAAEC,CAAC,IAAIG;AANf;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA9CD;;GAAMb,K;;KAAAA,K;AAgDN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { PokeCenterContext } from \"../../context/contextoFormulario\";\n\nconst Input = ({ name, label, type = \"text\" }) => {\n  // Aqui devemos acessar o estado global para obter os dados\n  // do formulário e uma maneira de atualizá-los.\n  const context = useContext(PokeCenterContext)\n  const {treiner, handleBlur} = context\n\n  // Além disso, usaremos um estado local para lidar com o estado da input.\n  const [dadosTreiner, setDadosTreiner] = useState([]);\n\n  const onChange = (e) => {\n    // Aqui devemos atualizar o estado local do input\n    setDadosTreiner({[e.target.name]: e.target.value})\n  };\n\n  const onBlur = (e) => {\n    e.preventDefault();\n\n    // Aqui devemos atualizar o estado global com os dados de\n    // cada entrada.\n    handleBlur({\n      nome: dadosTreiner,\n      sobrenome: dadosTreiner,\n      email: dadosTreiner,\n      nomePokemon: dadosTreiner\n    })\n    // DICA: Podemos usar o nome de cada entrada para salvar\n    // os dados no estado global usando uma notação { chave: valor }\n  };\n\n  console.log(treiner)\n  console.log(dadosTreiner)\n\n\n  return (\n    <div className=\"input-receptor\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        value={dadosTreiner}\n        name={label}\n        id={name}\n        onChange={onChange}\n        onBlur={e => onBlur}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}